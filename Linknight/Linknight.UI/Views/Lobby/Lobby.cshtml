@model Linknight.UI.ViewModels.LobbyVm
@using Microsoft.AspNetCore.Http;
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "Linknight Room";
}

<!--Should only really need to have this as the _layout shared document already has needed info-->
<!-- ==PLAN==

    |snav|   [blank space]  [blank space]
    |snav|   [videoplayer]    |cbox|
    |snav|   [videoplayer]    |cbox|
    |snav|   [videoplayer]    |cbox|
    |snav|   [videoplayer]    |cbox|
    |snav|   [videoplayer]   |blanks|
    |snav|   [videoplayer]   |blanks|
    |blank| [avatar section] |blanks|
    |blank|  [blank space]   |blanks|
     [           footer          ]
    -->
<div class="px-5 bg-dark filler">&nbsp;</div>

<style>
    #messagearea {
        display: block;
        overflow: auto;
        height: 100%;
    }

    #messagesList {
        height: 22rem;
        width: 15rem;
        overflow-y: auto;
        scroll-behavior: auto;
    }
</style>



<div class="container-fluid my-5 pb-4">
    <div class="row justify-content-center h-100">
        <!-- LEFT SIDE -->
        <div class="col bg-dark">
            <div class="col mb-5 bg-dark">
                <div class="col bg-dark mt-3">
                    <div class="bg-light">
                        <div>
                            @{
                                var username = @HttpContextAccessor.HttpContext.Session.GetString("username");
                            }
                            <a>@username</a>
                            <a>@Model.User.Username</a>
                            <partial name="_Lobby" model="Model.User" />
                        </div>
                        <p>User1:</p>
                        <p>User2:</p>
                        <p>User3:</p>
                        <p>User4:</p>
                    </div>
                </div>
            </div>
        </div>
        <!-- CENTER -->
        <div class="col-8 bg-light row-5">
            <iframe class="container-fluid row h-100" id="video" src="https://www.youtube.com/embed/dQw4w9WgXcQ" controls>
            </iframe>
        </div>

        <!-- RIGHT SIDE -->
        <div class="col bg-light">
            <div class="container">
                <input type="text" id="message" />
                <input type="button" id="sendmessage" value="Send" />
                <input type="hidden" id="displayname" value="Test" />
                <ul id="discussion"></ul>
            </div>
        </div>        

        @section scripts {
            <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/3.1.7/signalr.min.js"></script>
            <script>
        $(function () {
            console.log('Start the Hub');

            var connection = new signalR.HubConnectionBuilder()
                .withUrl('https://linknightapi.azurewebsites.net/LinkHub')
                .build();

            console.log("After hub connection");

            var messageInput = document.getElementById('message');
            @{
                var username = Model.User.Username;
                string usernames = username;
                var lobby = Model.Lobby.Id;
                string lobbyid = lobby.ToString();
            }
            var name = "@usernames";


            // Create a function that the hub can call to broadcast messages.
            connection.on('receivemessage', function (name, message) {
                // Html encode display name and message.
                var encodedName = name;
                var encodedMsg = message;
                // Add the message to the page.

                var liElement = document.createElement('li');
                liElement.innerHTML = '<strong>' + encodedName + '</strong>:&nbsp;&nbsp;' + encodedMsg;
                document.getElementById('discussion').appendChild(liElement);

            });

            connection.start()
                .then(function () {
                    console.log('connection started');
                    connection.invoke('JoinGroup', '@lobbyid');

                    var liElement = document.createElement('li');
                    liElement.innerHTML = '<strong>' + name + '</strong>:&nbsp;&nbsp;' + 'Connected...';
                    document.getElementById('discussion').appendChild(liElement);

                    connection.invoke('sendmessagetogroup', "@lobbyid", name, ": Connected");

                    document.getElementById('sendmessage').addEventListener('click', function (event) {
                        // Call the Send method on the hub.
                        //connection.invoke('sendmessage', name, messageInput.value);
                        connection.invoke('sendmessagetogroup', "@lobbyid", name, messageInput.value);

                        // Clear text box and reset focus for next comment.
                        messageInput.value = '';
                        messageInput.focus();
                        event.preventDefault();
                    });
                })
                .catch(error => {
                    console.error(error.message);
                });
        });

        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }

            </script>
        }
    </div>
    <div class="col-4 container my-2">
        <div class="container-fluid col-2 py-1"><a class="btn btn-outline-primary" href="#!" id="select">Select</a></div>
        <div id="textbox" class="container-fluid justify-content-center" style="display:none;">
            <input id="urlTextbox" class="form-control text-center" type="text" placeholder="Put Link Here..." />
            <button id="confirmUrl" class="btn btn-outline-primary py-1" value="Submit">Confirm</button>
        </div>
    </div>
</div>

<script src="~/js/signalr/dist/browser/signalr.js"></script>
<script>

    "use strict";

    var connection = new signalR.HubConnectionBuilder().withUrl("/chathub").build();
    var user = "";

    //Disable send button until connection is established
    document.getElementById("sendButton").disabled = true;

    connection.on("ReceiveMessage", function (user, message) {
        var msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        var encodedMsg = user + " says: " + msg;
        var li = document.createElement("li");
        li.textContent = encodedMsg;
        document.getElementById("messagesList").appendChild(li);
    });

    connection.start().then(function () {
        document.getElementById("sendButton").disabled = false;
    }).catch(function (err) {
        return console.error(err.toString());
    });

    document.getElementById("sendButton").addEventListener("click", function (event) {
        var message = document.getElementById("message").value;
        connection.invoke("SendMessage", user, message).then(function () {
            document.getElementById("message").value = "";
            var element = document.getElementById('messagesList');
            element.scrollTop = element.scrollHeight;
        }).catch(function (err) {
            return console.error(err.toString());
        });
        event.preventDefault();
    })

    function SetUser() {
        // Check the username
        var userInput = document.getElementById("user").value;
        if (userInput === "") {
            alert("Please enter your user name.");
            return;
        }

        user = userInput;

        //Hide user div and show message panel.
        document.getElementById("userinfo").style.display = 'none';
        document.getElementById("messagearea").style.display = "block";
        document.getElementById("user1").innerText = userInput;
    }

</script>

<script>
    var inputUser = document.getElementById("user");
    inputUser.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("userButton").click();
        }
    });
</script>

<script>
    var inputText = document.getElementById("message");
    inputText.addEventListener("keyup", function (event) {
        if (event.keyCode === 13) {
            event.preventDefault();
            document.getElementById("sendButton").click();
        }
    });
</script>
